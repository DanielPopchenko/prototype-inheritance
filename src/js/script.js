// const objB = {
//   z: 10,
// };

// const objA = Object.create(objB);
// /*
//  * В обьекте objB в !прототипе! будет лежать objA
//  * тоесть, objB будет иметь доступ к свойству a и b,
//  * а у objA в свою очередь в прототипе будет лежать ссылка
//  * на базовый обьект со всеми свойствами
//  */

// objA.x = 1;
// objA.y = 2;

// /**
//  * Мы получим 10 потому, что работает цепочка прототипов
//  * если в objA нету прототипа, то интерпритатор идет дальше
//  * до 1 совпадения
//  */
// console.log(objA.hasOwnProperty('r'));
// // если не находит то undefined
// console.log(objA.z);
